{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts", "../../../src/examples/index.tsx", "../../../src/examples/button.tsx"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport remarkGfm from \"remark-gfm\";\nimport rehypeSlug from \"rehype-slug\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport * as examples from \"./src/examples\";\n\nexport const Doc = defineDocumentType(() => ({\n  name: \"Doc\",\n  filePathPattern: `docs/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the doc\",\n      required: true,\n    },\n    category: {\n      type: \"string\",\n      description: \"The category of the doc\",\n      required: true,\n    },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (post) => `/${post._raw.flattenedPath}`,\n    },\n    slug: {\n      type: \"string\",\n      resolve: (doc) => {\n        const slug = doc._raw.sourceFileName.replace(/\\.mdx$/, \"\");\n        return slug;\n      },\n    },\n    examples: {\n      type: \"json\",\n      resolve: (doc) => {\n        const slug = doc._raw.sourceFileName.replace(/\\.mdx$/, \"\");\n        return examples[slug];\n      },\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"src\",\n  documentTypes: [Doc],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeSlug,\n      [\n        rehypeAutolinkHeadings,\n        {\n          behavior: \"before\",\n          test: [\"h2\", \"h3\", \"h4\", \"h5\", \"h6\"],\n        },\n      ],\n    ],\n  },\n});\n", "export * as button from \"./button\";\n", "export const basic = `\n<Button>Basic</Button>\n`;\n\nexport const disabled = `\n<Button disabled>Disabled</Button>\n`;\n\nexport const sizes = `\n<div className=\"flex gap-lg\">\n  <Button size=\"sm\">Button</Button>\n  <Button size=\"md\">Button</Button>\n  <Button size=\"lg\">Button</Button>\n</div>\n`;\n"],
  "mappings": ";;;;;;;AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,eAAe;AACtB,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;;;ACHnC;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAM,QAAQ;AAAA;AAAA;AAId,IAAM,WAAW;AAAA;AAAA;AAIjB,IAAM,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AFFd,IAAM,MAAM,mBAAmB,OAAO;AAAA,EAC3C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,IAAI,KAAK,KAAK,aAAa;AAAA,IAChD;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ;AAChB,cAAM,OAAO,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AACzD,eAAO;AAAA,MACT;AAAA,IACF;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ;AAChB,cAAM,OAAO,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AACzD,eAAO,iBAAS,IAAI;AAAA,MACtB;AAAA,IACF;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,GAAG;AAAA,EACnB,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,UAAU;AAAA,UACV,MAAM,CAAC,MAAM,MAAM,MAAM,MAAM,IAAI;AAAA,QACrC;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
